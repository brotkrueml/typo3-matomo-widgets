name: CI

on:
  push:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'Documentation/**'
      - '**.md'

jobs:
  build:
    name: Build PHP/TYPO3
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
        typo3-versions: ['^10', '^11']
        include:
          - php-versions: 7.2
            typo3-versions: ^10
          - php-versions: 7.3
            typo3-versions: ^10
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: fileinfo gd intl json mbstring mysqli openssl pcre pdo session xml zip zlib
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: |
          composer require typo3/cms-core=${{ matrix.typo3-versions }} --no-progress
          git checkout composer.json
      - name: Run PHP linter
        run: |
          find . -name \*.php  ! -path "./.Build/*" -exec php -l {} \;
      - name: Run unit tests
        run: |
          make tests
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: fileinfo gd intl json mbstring mysqli openssl pcre pdo session xml zip zlib
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: |
          composer install --no-progress
      - name: Run unit tests
        run: |
          make code-coverage
      - name: Send code coverage report to coveralls.io
        run: .Build/bin/php-coveralls -v
        env:
          COVERALLS_RUN_LOCALLY: 1
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      - name: Run psalm
        run: |
          make psalm
  xliff-validation:
    name: XLIFF validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install package
        run: |
          sudo apt-get -y install libxml2-utils
      - name: Download XSD
        run: |
          curl --no-progress-meter -O https://docs.oasis-open.org/xliff/v1.2/cs02/xliff-core-1.2-strict.xsd
      - name: Validate XLIFF files
        run: |
          xmllint --schema xliff-core-1.2-strict.xsd --noout Resources/Private/Language/*.xlf
